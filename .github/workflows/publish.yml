name: Publish

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm -w -s build

      - name: Lint
        run: pnpm -w -s lint

      - name: Test
        run: pnpm -w -s test

  e2e:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22


      - name: Install Docker Compose
        run: |
          # Docker Compose v2 is already installed on GitHub Actions runners
          # Just verify it's available
          docker compose version

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm -w -s build

      - name: E2E tests (core)
        run: pnpm -w -s test:e2e

  publish:
    needs: e2e
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
  # Uncomment the next line and switch to trusted publishing when the npm org is configured
  # id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Verify npm auth
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          set -euo pipefail
          npm whoami || { echo "npm auth failed. Ensure NPM_TOKEN is set and has publish rights."; exit 1; }

      - name: Publish packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Ensure we're logged in for npm publish via pnpm
          pnpm -w -s -r publish --access public --no-git-checks

      - name: Verify packages on npm
        run: |
          set -euo pipefail
          echo "Verifying @postgrestx/core and @postgrestx/tanstack-query are published..."
          tries=5
          for i in $(seq 1 $tries); do
            core_v=$(npm view @postgrestx/core version || true)
            tq_v=$(npm view @postgrestx/tanstack-query version || true)
            if [ -n "${core_v}" ] && [ -n "${tq_v}" ]; then
              echo "Published versions: core=${core_v}, tanstack-query=${tq_v}"
              exit 0
            fi
            echo "Not visible yet (attempt ${i}/${tries}). Waiting..."
            sleep 5
          done
          echo "Packages not visible on npm after verification attempts." >&2
          echo "If this persists, ensure NPM_TOKEN has publish rights to the @postgrestx org or configure Trusted Publishing." >&2
          exit 1
